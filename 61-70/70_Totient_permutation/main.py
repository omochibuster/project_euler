# coding: utf-8

# オイラーのトーティエント関数 φ(n) (ファイ関数とも呼ばれる) とは, 
# n 未満の正の整数で n と互いに素なものの個数を表す. 
# 例えば, 1, 2, 4, 5, 7, 8 は9未満で9と互いに素であるので, φ(9) = 6 となる. 
# 1 は全ての正の整数と互いに素であるとみなされる. よって φ(1) = 1 である.
# 面白いことに, φ(87109)=79180 であり, 87109は79180を置換したものとなっている.
# 1 < n < 107 で φ(n) が n を置換したものになっているもののうち,
# n/φ(n) が最小となる n を求めよ.

from fractions import gcd

def a(hij):
	#hij以下の素数をすべて求める
	#その素数から、互いに素な数を求める
	pass

for i in range(30):
	count = 1
	for j in range(2, i):
		if gcd(i, j) == 1:
			count += 1
	print(i, count)